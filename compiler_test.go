package main

import (
	"os/exec"
	"path/filepath"
	"strings"
	"testing"
)

func test_compiler(t *testing.T, input_file string, reference_file string) {
	// output_file is the name of the text-format proto file that is generated by the compiler
	output_file := strings.Replace(filepath.Base(input_file), filepath.Ext(input_file), ".text", 1)
	// remove any preexisting output_file
	var err error
	err = exec.Command("rm", "-f", output_file).Run()
	if err != nil {
		t.Logf("Failed to remove file %s", output_file)
		t.FailNow()
	}
	// run the compiler
	err = exec.Command("openapi-compiler", "-in", input_file, "-text").Run()
	if err != nil {
		t.Logf("JSON compile failed: %+v", err)
		t.FailNow()
	}
	// verify the output_file against the reference_file
	err = exec.Command("diff", output_file, reference_file).Run()
	if err != nil {
		t.Logf("JSON diff failed: %+v", err)
		t.FailNow()
	}
}

func TestPetstoreJSON(t *testing.T) {
	test_compiler(t,
		"examples/petstore.json",
		"test/petstore.text")
}

func TestPetstoreYAML(t *testing.T) {
	test_compiler(t,
		"examples/petstore.yaml",
		"test/petstore.text")
}

func TestSeparateYAML(t *testing.T) {
	test_compiler(t,
		"examples/v2.0/yaml/petstore-separate/spec/swagger.yaml",
		"test/v2.0/yaml/petstore-separate/spec/swagger.text")
}
