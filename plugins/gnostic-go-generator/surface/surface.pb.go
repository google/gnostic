// Code generated by protoc-gen-go.
// source: surface.proto
// DO NOT EDIT!

/*
Package gnostic_surface_v1 is a generated protocol buffer package.

It is generated from these files:
	surface.proto

It has these top-level messages:
	Field
	Type
	Method
	Model
*/
package gnostic_surface_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Kind int32

const (
	Kind_STRUCT Kind = 0
	Kind_MAP    Kind = 1
)

var Kind_name = map[int32]string{
	0: "STRUCT",
	1: "MAP",
}
var Kind_value = map[string]int32{
	"STRUCT": 0,
	"MAP":    1,
}

func (x Kind) String() string {
	return proto.EnumName(Kind_name, int32(x))
}
func (Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Position int32

const (
	Position_BODY     Position = 0
	Position_HEADER   Position = 1
	Position_FORMDATA Position = 2
	Position_QUERY    Position = 3
	Position_PATH     Position = 4
)

var Position_name = map[int32]string{
	0: "BODY",
	1: "HEADER",
	2: "FORMDATA",
	3: "QUERY",
	4: "PATH",
}
var Position_value = map[string]int32{
	"BODY":     0,
	"HEADER":   1,
	"FORMDATA": 2,
	"QUERY":    3,
	"PATH":     4,
}

func (x Position) String() string {
	return proto.EnumName(Position_name, int32(x))
}
func (Position) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Field is a field in a definition and can be associated with
// a position in a request structure.
type Field struct {
	Name          string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type          string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	ValueType     string   `protobuf:"bytes,3,opt,name=valueType" json:"valueType,omitempty"`
	NativeType    string   `protobuf:"bytes,4,opt,name=nativeType" json:"nativeType,omitempty"`
	FieldName     string   `protobuf:"bytes,5,opt,name=fieldName" json:"fieldName,omitempty"`
	ParameterName string   `protobuf:"bytes,6,opt,name=parameterName" json:"parameterName,omitempty"`
	JSONName      string   `protobuf:"bytes,7,opt,name=JSONName" json:"JSONName,omitempty"`
	Position      Position `protobuf:"varint,8,opt,name=position,enum=gnostic.surface.v1.Position" json:"position,omitempty"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Field) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Field) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Field) GetValueType() string {
	if m != nil {
		return m.ValueType
	}
	return ""
}

func (m *Field) GetNativeType() string {
	if m != nil {
		return m.NativeType
	}
	return ""
}

func (m *Field) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *Field) GetParameterName() string {
	if m != nil {
		return m.ParameterName
	}
	return ""
}

func (m *Field) GetJSONName() string {
	if m != nil {
		return m.JSONName
	}
	return ""
}

func (m *Field) GetPosition() Position {
	if m != nil {
		return m.Position
	}
	return Position_BODY
}

// Type typically corresponds to a definition, parameter, or response
// in an API and is represented by a type in generated code.
type Type struct {
	Name        string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Kind        Kind     `protobuf:"varint,2,opt,name=kind,enum=gnostic.surface.v1.Kind" json:"kind,omitempty"`
	MapType     string   `protobuf:"bytes,3,opt,name=mapType" json:"mapType,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Fields      []*Field `protobuf:"bytes,5,rep,name=fields" json:"fields,omitempty"`
}

func (m *Type) Reset()                    { *m = Type{} }
func (m *Type) String() string            { return proto.CompactTextString(m) }
func (*Type) ProtoMessage()               {}
func (*Type) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Type) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Type) GetKind() Kind {
	if m != nil {
		return m.Kind
	}
	return Kind_STRUCT
}

func (m *Type) GetMapType() string {
	if m != nil {
		return m.MapType
	}
	return ""
}

func (m *Type) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Type) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

// Method is an operation of an API and typically has associated client and server code.
type Method struct {
	Name           string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path           string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Method         string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	Description    string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	HandlerName    string `protobuf:"bytes,5,opt,name=handlerName" json:"handlerName,omitempty"`
	ProcessorName  string `protobuf:"bytes,6,opt,name=processorName" json:"processorName,omitempty"`
	ClientName     string `protobuf:"bytes,7,opt,name=clientName" json:"clientName,omitempty"`
	ResultTypeName string `protobuf:"bytes,8,opt,name=resultTypeName" json:"resultTypeName,omitempty"`
	ParametersType *Type  `protobuf:"bytes,9,opt,name=parametersType" json:"parametersType,omitempty"`
	ResponsesType  *Type  `protobuf:"bytes,10,opt,name=responsesType" json:"responsesType,omitempty"`
}

func (m *Method) Reset()                    { *m = Method{} }
func (m *Method) String() string            { return proto.CompactTextString(m) }
func (*Method) ProtoMessage()               {}
func (*Method) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Method) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Method) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Method) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Method) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Method) GetHandlerName() string {
	if m != nil {
		return m.HandlerName
	}
	return ""
}

func (m *Method) GetProcessorName() string {
	if m != nil {
		return m.ProcessorName
	}
	return ""
}

func (m *Method) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *Method) GetResultTypeName() string {
	if m != nil {
		return m.ResultTypeName
	}
	return ""
}

func (m *Method) GetParametersType() *Type {
	if m != nil {
		return m.ParametersType
	}
	return nil
}

func (m *Method) GetResponsesType() *Type {
	if m != nil {
		return m.ResponsesType
	}
	return nil
}

// Model represents an API for code generation.
type Model struct {
	Name    string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Types   []*Type   `protobuf:"bytes,2,rep,name=types" json:"types,omitempty"`
	Methods []*Method `protobuf:"bytes,3,rep,name=methods" json:"methods,omitempty"`
}

func (m *Model) Reset()                    { *m = Model{} }
func (m *Model) String() string            { return proto.CompactTextString(m) }
func (*Model) ProtoMessage()               {}
func (*Model) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Model) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Model) GetTypes() []*Type {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *Model) GetMethods() []*Method {
	if m != nil {
		return m.Methods
	}
	return nil
}

func init() {
	proto.RegisterType((*Field)(nil), "gnostic.surface.v1.Field")
	proto.RegisterType((*Type)(nil), "gnostic.surface.v1.Type")
	proto.RegisterType((*Method)(nil), "gnostic.surface.v1.Method")
	proto.RegisterType((*Model)(nil), "gnostic.surface.v1.Model")
	proto.RegisterEnum("gnostic.surface.v1.Kind", Kind_name, Kind_value)
	proto.RegisterEnum("gnostic.surface.v1.Position", Position_name, Position_value)
}

func init() { proto.RegisterFile("surface.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x94, 0xc1, 0x8f, 0xd2, 0x40,
	0x14, 0xc6, 0xb7, 0xd0, 0x96, 0xf2, 0x10, 0xd2, 0xbc, 0x83, 0xa9, 0xeb, 0xc6, 0x34, 0xc4, 0x18,
	0xb2, 0x31, 0x24, 0x8b, 0x1e, 0x3c, 0x19, 0x71, 0x61, 0xb3, 0xd1, 0xb0, 0xe0, 0x2c, 0x7b, 0xd8,
	0x63, 0xa5, 0xb3, 0xd2, 0x58, 0x3a, 0x4d, 0x67, 0x20, 0xf1, 0xe8, 0xc9, 0x3f, 0xc9, 0x7f, 0xce,
	0x83, 0x99, 0xd7, 0x16, 0xcb, 0xda, 0x8d, 0xde, 0x66, 0xbe, 0xf7, 0x7b, 0x33, 0xc3, 0xf7, 0x3d,
	0x0a, 0x5d, 0xb9, 0xcd, 0xee, 0x82, 0x15, 0x1f, 0xa6, 0x99, 0x50, 0x02, 0xf1, 0x4b, 0x22, 0xa4,
	0x8a, 0x56, 0xc3, 0x52, 0xde, 0x9d, 0xf5, 0x7f, 0x34, 0xc0, 0xba, 0x88, 0x78, 0x1c, 0x22, 0x82,
	0x99, 0x04, 0x1b, 0xee, 0x19, 0xbe, 0x31, 0x68, 0x33, 0x5a, 0x6b, 0x4d, 0x7d, 0x4b, 0xb9, 0xd7,
	0xc8, 0x35, 0xbd, 0xc6, 0x13, 0x68, 0xef, 0x82, 0x78, 0xcb, 0x97, 0xba, 0xd0, 0xa4, 0xc2, 0x1f,
	0x01, 0x9f, 0x01, 0x24, 0x81, 0x8a, 0x76, 0x79, 0xd9, 0xa4, 0x72, 0x45, 0xd1, 0xdd, 0x77, 0xfa,
	0xba, 0x2b, 0x7d, 0x95, 0x95, 0x77, 0xef, 0x05, 0x7c, 0x0e, 0xdd, 0x34, 0xc8, 0x82, 0x0d, 0x57,
	0x3c, 0x23, 0xc2, 0x26, 0xe2, 0x50, 0xc4, 0x63, 0x70, 0x3e, 0x5c, 0xcf, 0xaf, 0x08, 0x68, 0x11,
	0xb0, 0xdf, 0xe3, 0x1b, 0x70, 0x52, 0x21, 0x23, 0x15, 0x89, 0xc4, 0x73, 0x7c, 0x63, 0xd0, 0x1b,
	0x9d, 0x0c, 0xff, 0xfe, 0xd9, 0xc3, 0x45, 0xc1, 0xb0, 0x3d, 0xdd, 0xff, 0x69, 0x80, 0x49, 0x4f,
	0xac, 0x33, 0xe2, 0x25, 0x98, 0x5f, 0xa3, 0x24, 0x24, 0x23, 0x7a, 0x23, 0xaf, 0xee, 0xc8, 0x8f,
	0x51, 0x12, 0x32, 0xa2, 0xd0, 0x83, 0xd6, 0x26, 0x48, 0x2b, 0x06, 0x95, 0x5b, 0xf4, 0xa1, 0x13,
	0x72, 0xb9, 0xca, 0xa2, 0x94, 0x5e, 0x98, 0xfb, 0x53, 0x95, 0xf0, 0x0c, 0x6c, 0xf2, 0x43, 0x7a,
	0x96, 0xdf, 0x1c, 0x74, 0x46, 0x4f, 0xea, 0xee, 0xa2, 0xc4, 0x58, 0x01, 0xf6, 0x7f, 0x35, 0xc0,
	0x9e, 0x71, 0xb5, 0x16, 0x0f, 0x86, 0x98, 0x06, 0x6a, 0x5d, 0x86, 0xa8, 0xd7, 0xf8, 0x18, 0xec,
	0x0d, 0x75, 0x14, 0x0f, 0x2c, 0x76, 0xff, 0xf1, 0x3e, 0x1f, 0x3a, 0xeb, 0x20, 0x09, 0xe3, 0x22,
	0xa0, 0x3c, 0xc2, 0xaa, 0x44, 0x21, 0x66, 0x62, 0xc5, 0xa5, 0x14, 0x87, 0x21, 0x56, 0x45, 0x3d,
	0x28, 0xab, 0x38, 0xe2, 0x89, 0xaa, 0xc4, 0x58, 0x51, 0xf0, 0x05, 0xf4, 0x32, 0x2e, 0xb7, 0xb1,
	0xd2, 0xbe, 0x11, 0xe3, 0x10, 0x73, 0x4f, 0xc5, 0x77, 0xd0, 0xdb, 0x4f, 0x87, 0x24, 0xcb, 0xdb,
	0xbe, 0x31, 0xe8, 0xd4, 0x67, 0xa4, 0xeb, 0xec, 0x1e, 0x8f, 0x6f, 0xa1, 0x9b, 0x71, 0x99, 0x8a,
	0x44, 0xf2, 0xfc, 0x00, 0xf8, 0xc7, 0x01, 0x87, 0x78, 0xff, 0xbb, 0x01, 0xd6, 0x4c, 0x84, 0x3c,
	0xae, 0x75, 0x7f, 0x08, 0x96, 0xfe, 0xdb, 0x48, 0xaf, 0x41, 0x71, 0x3e, 0x7c, 0x6a, 0x8e, 0xe1,
	0x6b, 0x68, 0xe5, 0x59, 0x48, 0xaf, 0x49, 0x1d, 0xc7, 0x75, 0x1d, 0x79, 0xdc, 0xac, 0x44, 0x4f,
	0x9f, 0x82, 0xa9, 0xe7, 0x0f, 0x01, 0xec, 0xeb, 0x25, 0xbb, 0x39, 0x5f, 0xba, 0x47, 0xd8, 0x82,
	0xe6, 0x6c, 0xbc, 0x70, 0x8d, 0xd3, 0x73, 0x70, 0xca, 0x79, 0x47, 0x07, 0xcc, 0xf7, 0xf3, 0xc9,
	0xad, 0x7b, 0xa4, 0xd1, 0xcb, 0xe9, 0x78, 0x32, 0x65, 0xae, 0x81, 0x8f, 0xc0, 0xb9, 0x98, 0xb3,
	0xd9, 0x64, 0xbc, 0x1c, 0xbb, 0x0d, 0x6c, 0x83, 0xf5, 0xe9, 0x66, 0xca, 0x6e, 0xdd, 0xa6, 0xc6,
	0x17, 0xe3, 0xe5, 0xa5, 0x6b, 0x7e, 0xb6, 0xe9, 0x1b, 0xf2, 0xea, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x51, 0xa1, 0xb0, 0x2d, 0x54, 0x04, 0x00, 0x00,
}
