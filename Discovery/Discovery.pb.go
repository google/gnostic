// Code generated by protoc-gen-go.
// source: Discovery/Discovery.proto
// DO NOT EDIT!

/*
Package discovery_v1 is a generated protocol buffer package.

It is generated from these files:
	Discovery/Discovery.proto

It has these top-level messages:
	Annotations
	Any
	Auth
	Document
	Icons
	MediaUpload
	Method
	Methods
	NamedMethod
	NamedParameter
	NamedResource
	NamedSchema
	NamedScope
	Parameter
	Parameters
	Protocols
	Request
	Resource
	Resources
	Response
	Resumable
	Schema
	Schemas
	Scope
	Scopes
	Simple
	StringArray
*/
package discovery_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Annotations struct {
	Required []string `protobuf:"bytes,1,rep,name=required" json:"required,omitempty"`
}

func (m *Annotations) Reset()                    { *m = Annotations{} }
func (m *Annotations) String() string            { return proto.CompactTextString(m) }
func (*Annotations) ProtoMessage()               {}
func (*Annotations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Annotations) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

type Any struct {
	Value *google_protobuf.Any `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Yaml  string               `protobuf:"bytes,2,opt,name=yaml" json:"yaml,omitempty"`
}

func (m *Any) Reset()                    { *m = Any{} }
func (m *Any) String() string            { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()               {}
func (*Any) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Any) GetValue() *google_protobuf.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Any) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type Auth struct {
	Oauth2 *Any `protobuf:"bytes,1,opt,name=oauth2" json:"oauth2,omitempty"`
}

func (m *Auth) Reset()                    { *m = Auth{} }
func (m *Auth) String() string            { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()               {}
func (*Auth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Auth) GetOauth2() *Any {
	if m != nil {
		return m.Oauth2
	}
	return nil
}

type Document struct {
	Kind              string      `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	DiscoveryVersion  string      `protobuf:"bytes,2,opt,name=discovery_version,json=discoveryVersion" json:"discovery_version,omitempty"`
	Id                string      `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Name              string      `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Version           string      `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	Revision          string      `protobuf:"bytes,6,opt,name=revision" json:"revision,omitempty"`
	Title             string      `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Description       string      `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	Icons             *Icons      `protobuf:"bytes,9,opt,name=icons" json:"icons,omitempty"`
	DocumentationLink string      `protobuf:"bytes,10,opt,name=documentation_link,json=documentationLink" json:"documentation_link,omitempty"`
	Labels            []string    `protobuf:"bytes,11,rep,name=labels" json:"labels,omitempty"`
	Protocol          string      `protobuf:"bytes,12,opt,name=protocol" json:"protocol,omitempty"`
	BaseUrl           string      `protobuf:"bytes,13,opt,name=base_url,json=baseUrl" json:"base_url,omitempty"`
	BasePath          string      `protobuf:"bytes,14,opt,name=base_path,json=basePath" json:"base_path,omitempty"`
	RootUrl           string      `protobuf:"bytes,15,opt,name=root_url,json=rootUrl" json:"root_url,omitempty"`
	ServicePath       string      `protobuf:"bytes,16,opt,name=service_path,json=servicePath" json:"service_path,omitempty"`
	BatchPath         string      `protobuf:"bytes,17,opt,name=batch_path,json=batchPath" json:"batch_path,omitempty"`
	Parameters        *Parameters `protobuf:"bytes,18,opt,name=parameters" json:"parameters,omitempty"`
	Auth              *Auth       `protobuf:"bytes,19,opt,name=auth" json:"auth,omitempty"`
	Features          []string    `protobuf:"bytes,20,rep,name=features" json:"features,omitempty"`
	Schemas           *Schemas    `protobuf:"bytes,21,opt,name=schemas" json:"schemas,omitempty"`
	Methods           *Methods    `protobuf:"bytes,22,opt,name=methods" json:"methods,omitempty"`
	Resources         *Resources  `protobuf:"bytes,23,opt,name=resources" json:"resources,omitempty"`
	Etag              string      `protobuf:"bytes,24,opt,name=etag" json:"etag,omitempty"`
	OwnerDomain       string      `protobuf:"bytes,25,opt,name=owner_domain,json=ownerDomain" json:"owner_domain,omitempty"`
	OwnerName         string      `protobuf:"bytes,26,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	VersionModule     string      `protobuf:"bytes,27,opt,name=version_module,json=versionModule" json:"version_module,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Document) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Document) GetDiscoveryVersion() string {
	if m != nil {
		return m.DiscoveryVersion
	}
	return ""
}

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Document) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Document) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *Document) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Document) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Document) GetIcons() *Icons {
	if m != nil {
		return m.Icons
	}
	return nil
}

func (m *Document) GetDocumentationLink() string {
	if m != nil {
		return m.DocumentationLink
	}
	return ""
}

func (m *Document) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Document) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Document) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *Document) GetBasePath() string {
	if m != nil {
		return m.BasePath
	}
	return ""
}

func (m *Document) GetRootUrl() string {
	if m != nil {
		return m.RootUrl
	}
	return ""
}

func (m *Document) GetServicePath() string {
	if m != nil {
		return m.ServicePath
	}
	return ""
}

func (m *Document) GetBatchPath() string {
	if m != nil {
		return m.BatchPath
	}
	return ""
}

func (m *Document) GetParameters() *Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Document) GetAuth() *Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *Document) GetFeatures() []string {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Document) GetSchemas() *Schemas {
	if m != nil {
		return m.Schemas
	}
	return nil
}

func (m *Document) GetMethods() *Methods {
	if m != nil {
		return m.Methods
	}
	return nil
}

func (m *Document) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Document) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *Document) GetOwnerDomain() string {
	if m != nil {
		return m.OwnerDomain
	}
	return ""
}

func (m *Document) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *Document) GetVersionModule() string {
	if m != nil {
		return m.VersionModule
	}
	return ""
}

// Icons that represent the API.
type Icons struct {
	X16 string `protobuf:"bytes,1,opt,name=x16" json:"x16,omitempty"`
	X32 string `protobuf:"bytes,2,opt,name=x32" json:"x32,omitempty"`
}

func (m *Icons) Reset()                    { *m = Icons{} }
func (m *Icons) String() string            { return proto.CompactTextString(m) }
func (*Icons) ProtoMessage()               {}
func (*Icons) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Icons) GetX16() string {
	if m != nil {
		return m.X16
	}
	return ""
}

func (m *Icons) GetX32() string {
	if m != nil {
		return m.X32
	}
	return ""
}

type MediaUpload struct {
	Accept               []string   `protobuf:"bytes,1,rep,name=accept" json:"accept,omitempty"`
	Maxsize              string     `protobuf:"bytes,2,opt,name=maxsize" json:"maxsize,omitempty"`
	Protocols            *Protocols `protobuf:"bytes,3,opt,name=protocols" json:"protocols,omitempty"`
	SupportsSubscription bool       `protobuf:"varint,4,opt,name=supports_subscription,json=supportsSubscription" json:"supports_subscription,omitempty"`
}

func (m *MediaUpload) Reset()                    { *m = MediaUpload{} }
func (m *MediaUpload) String() string            { return proto.CompactTextString(m) }
func (*MediaUpload) ProtoMessage()               {}
func (*MediaUpload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MediaUpload) GetAccept() []string {
	if m != nil {
		return m.Accept
	}
	return nil
}

func (m *MediaUpload) GetMaxsize() string {
	if m != nil {
		return m.Maxsize
	}
	return ""
}

func (m *MediaUpload) GetProtocols() *Protocols {
	if m != nil {
		return m.Protocols
	}
	return nil
}

func (m *MediaUpload) GetSupportsSubscription() bool {
	if m != nil {
		return m.SupportsSubscription
	}
	return false
}

type Method struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Path                 string       `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	HttpMethod           string       `protobuf:"bytes,3,opt,name=http_method,json=httpMethod" json:"http_method,omitempty"`
	Description          string       `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Parameters           *Parameters  `protobuf:"bytes,5,opt,name=parameters" json:"parameters,omitempty"`
	ParameterOrder       []string     `protobuf:"bytes,6,rep,name=parameter_order,json=parameterOrder" json:"parameter_order,omitempty"`
	Request              *Request     `protobuf:"bytes,7,opt,name=request" json:"request,omitempty"`
	Response             *Response    `protobuf:"bytes,8,opt,name=response" json:"response,omitempty"`
	Scopes               []string     `protobuf:"bytes,9,rep,name=scopes" json:"scopes,omitempty"`
	SupportsMediaDownoad bool         `protobuf:"varint,10,opt,name=supports_media_downoad,json=supportsMediaDownoad" json:"supports_media_downoad,omitempty"`
	SupportsMediaUpload  bool         `protobuf:"varint,11,opt,name=supports_media_upload,json=supportsMediaUpload" json:"supports_media_upload,omitempty"`
	MediaUpload          *MediaUpload `protobuf:"bytes,12,opt,name=media_upload,json=mediaUpload" json:"media_upload,omitempty"`
	SupportsSubscription bool         `protobuf:"varint,13,opt,name=supports_subscription,json=supportsSubscription" json:"supports_subscription,omitempty"`
	FlatPath             string       `protobuf:"bytes,14,opt,name=flat_path,json=flatPath" json:"flat_path,omitempty"`
}

func (m *Method) Reset()                    { *m = Method{} }
func (m *Method) String() string            { return proto.CompactTextString(m) }
func (*Method) ProtoMessage()               {}
func (*Method) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Method) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Method) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Method) GetHttpMethod() string {
	if m != nil {
		return m.HttpMethod
	}
	return ""
}

func (m *Method) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Method) GetParameters() *Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Method) GetParameterOrder() []string {
	if m != nil {
		return m.ParameterOrder
	}
	return nil
}

func (m *Method) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Method) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Method) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Method) GetSupportsMediaDownoad() bool {
	if m != nil {
		return m.SupportsMediaDownoad
	}
	return false
}

func (m *Method) GetSupportsMediaUpload() bool {
	if m != nil {
		return m.SupportsMediaUpload
	}
	return false
}

func (m *Method) GetMediaUpload() *MediaUpload {
	if m != nil {
		return m.MediaUpload
	}
	return nil
}

func (m *Method) GetSupportsSubscription() bool {
	if m != nil {
		return m.SupportsSubscription
	}
	return false
}

func (m *Method) GetFlatPath() string {
	if m != nil {
		return m.FlatPath
	}
	return ""
}

type Methods struct {
	AdditionalProperties []*NamedMethod `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Methods) Reset()                    { *m = Methods{} }
func (m *Methods) String() string            { return proto.CompactTextString(m) }
func (*Methods) ProtoMessage()               {}
func (*Methods) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Methods) GetAdditionalProperties() []*NamedMethod {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

// Automatically-generated message used to represent maps of Method as ordered (name,value) pairs.
type NamedMethod struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Method `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedMethod) Reset()                    { *m = NamedMethod{} }
func (m *NamedMethod) String() string            { return proto.CompactTextString(m) }
func (*NamedMethod) ProtoMessage()               {}
func (*NamedMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *NamedMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedMethod) GetValue() *Method {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of Parameter as ordered (name,value) pairs.
type NamedParameter struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Parameter `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedParameter) Reset()                    { *m = NamedParameter{} }
func (m *NamedParameter) String() string            { return proto.CompactTextString(m) }
func (*NamedParameter) ProtoMessage()               {}
func (*NamedParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *NamedParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedParameter) GetValue() *Parameter {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of Resource as ordered (name,value) pairs.
type NamedResource struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Resource `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedResource) Reset()                    { *m = NamedResource{} }
func (m *NamedResource) String() string            { return proto.CompactTextString(m) }
func (*NamedResource) ProtoMessage()               {}
func (*NamedResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *NamedResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedResource) GetValue() *Resource {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of Schema as ordered (name,value) pairs.
type NamedSchema struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Schema `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedSchema) Reset()                    { *m = NamedSchema{} }
func (m *NamedSchema) String() string            { return proto.CompactTextString(m) }
func (*NamedSchema) ProtoMessage()               {}
func (*NamedSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *NamedSchema) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedSchema) GetValue() *Schema {
	if m != nil {
		return m.Value
	}
	return nil
}

// Automatically-generated message used to represent maps of Scope as ordered (name,value) pairs.
type NamedScope struct {
	// Map key
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapped value
	Value *Scope `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NamedScope) Reset()                    { *m = NamedScope{} }
func (m *NamedScope) String() string            { return proto.CompactTextString(m) }
func (*NamedScope) ProtoMessage()               {}
func (*NamedScope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *NamedScope) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedScope) GetValue() *Scope {
	if m != nil {
		return m.Value
	}
	return nil
}

type Parameter struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                 string       `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	XRef                 string       `protobuf:"bytes,3,opt,name=_ref,json=Ref" json:"_ref,omitempty"`
	Description          string       `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Default              string       `protobuf:"bytes,5,opt,name=default" json:"default,omitempty"`
	Required             bool         `protobuf:"varint,6,opt,name=required" json:"required,omitempty"`
	Format               string       `protobuf:"bytes,7,opt,name=format" json:"format,omitempty"`
	Pattern              string       `protobuf:"bytes,8,opt,name=pattern" json:"pattern,omitempty"`
	Minimum              string       `protobuf:"bytes,9,opt,name=minimum" json:"minimum,omitempty"`
	Maximum              string       `protobuf:"bytes,10,opt,name=maximum" json:"maximum,omitempty"`
	Enum                 []string     `protobuf:"bytes,11,rep,name=enum" json:"enum,omitempty"`
	EnumDescriptions     []string     `protobuf:"bytes,12,rep,name=enum_descriptions,json=enumDescriptions" json:"enum_descriptions,omitempty"`
	Repeated             bool         `protobuf:"varint,13,opt,name=repeated" json:"repeated,omitempty"`
	Location             string       `protobuf:"bytes,14,opt,name=location" json:"location,omitempty"`
	Properties           *Schemas     `protobuf:"bytes,15,opt,name=properties" json:"properties,omitempty"`
	AdditionalProperties *Schema      `protobuf:"bytes,16,opt,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
	Items                *Schema      `protobuf:"bytes,17,opt,name=items" json:"items,omitempty"`
	Annotations          *Annotations `protobuf:"bytes,18,opt,name=annotations" json:"annotations,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Parameter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Parameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Parameter) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

func (m *Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Parameter) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *Parameter) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Parameter) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Parameter) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Parameter) GetMinimum() string {
	if m != nil {
		return m.Minimum
	}
	return ""
}

func (m *Parameter) GetMaximum() string {
	if m != nil {
		return m.Maximum
	}
	return ""
}

func (m *Parameter) GetEnum() []string {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Parameter) GetEnumDescriptions() []string {
	if m != nil {
		return m.EnumDescriptions
	}
	return nil
}

func (m *Parameter) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *Parameter) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Parameter) GetProperties() *Schemas {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Parameter) GetAdditionalProperties() *Schema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

func (m *Parameter) GetItems() *Schema {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Parameter) GetAnnotations() *Annotations {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type Parameters struct {
	AdditionalProperties []*NamedParameter `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Parameters) GetAdditionalProperties() []*NamedParameter {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Protocols struct {
	Simple    *Simple    `protobuf:"bytes,1,opt,name=simple" json:"simple,omitempty"`
	Resumable *Resumable `protobuf:"bytes,2,opt,name=resumable" json:"resumable,omitempty"`
}

func (m *Protocols) Reset()                    { *m = Protocols{} }
func (m *Protocols) String() string            { return proto.CompactTextString(m) }
func (*Protocols) ProtoMessage()               {}
func (*Protocols) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Protocols) GetSimple() *Simple {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *Protocols) GetResumable() *Resumable {
	if m != nil {
		return m.Resumable
	}
	return nil
}

type Request struct {
	XRef string `protobuf:"bytes,1,opt,name=_ref,json=Ref" json:"_ref,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Request) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

type Resource struct {
	Methods   *Methods   `protobuf:"bytes,1,opt,name=methods" json:"methods,omitempty"`
	Resources *Resources `protobuf:"bytes,2,opt,name=resources" json:"resources,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Resource) GetMethods() *Methods {
	if m != nil {
		return m.Methods
	}
	return nil
}

func (m *Resource) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

type Resources struct {
	AdditionalProperties []*NamedResource `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Resources) Reset()                    { *m = Resources{} }
func (m *Resources) String() string            { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()               {}
func (*Resources) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Resources) GetAdditionalProperties() []*NamedResource {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Response struct {
	XRef string `protobuf:"bytes,1,opt,name=_ref,json=Ref" json:"_ref,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Response) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

type Resumable struct {
	Multipart bool   `protobuf:"varint,1,opt,name=multipart" json:"multipart,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *Resumable) Reset()                    { *m = Resumable{} }
func (m *Resumable) String() string            { return proto.CompactTextString(m) }
func (*Resumable) ProtoMessage()               {}
func (*Resumable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Resumable) GetMultipart() bool {
	if m != nil {
		return m.Multipart
	}
	return false
}

func (m *Resumable) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Schema struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                 string       `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Description          string       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Default              string       `protobuf:"bytes,4,opt,name=default" json:"default,omitempty"`
	Required             bool         `protobuf:"varint,5,opt,name=required" json:"required,omitempty"`
	Format               string       `protobuf:"bytes,6,opt,name=format" json:"format,omitempty"`
	Pattern              string       `protobuf:"bytes,7,opt,name=pattern" json:"pattern,omitempty"`
	Minimum              string       `protobuf:"bytes,8,opt,name=minimum" json:"minimum,omitempty"`
	Maximum              string       `protobuf:"bytes,9,opt,name=maximum" json:"maximum,omitempty"`
	Enum                 []string     `protobuf:"bytes,10,rep,name=enum" json:"enum,omitempty"`
	EnumDescriptions     []string     `protobuf:"bytes,11,rep,name=enum_descriptions,json=enumDescriptions" json:"enum_descriptions,omitempty"`
	Repeated             bool         `protobuf:"varint,12,opt,name=repeated" json:"repeated,omitempty"`
	Location             string       `protobuf:"bytes,13,opt,name=location" json:"location,omitempty"`
	Properties           *Schemas     `protobuf:"bytes,14,opt,name=properties" json:"properties,omitempty"`
	AdditionalProperties *Schema      `protobuf:"bytes,15,opt,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
	Items                *Schema      `protobuf:"bytes,16,opt,name=items" json:"items,omitempty"`
	XRef                 string       `protobuf:"bytes,17,opt,name=_ref,json=Ref" json:"_ref,omitempty"`
	Annotations          *Annotations `protobuf:"bytes,18,opt,name=annotations" json:"annotations,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Schema) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schema) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Schema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schema) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *Schema) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Schema) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Schema) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Schema) GetMinimum() string {
	if m != nil {
		return m.Minimum
	}
	return ""
}

func (m *Schema) GetMaximum() string {
	if m != nil {
		return m.Maximum
	}
	return ""
}

func (m *Schema) GetEnum() []string {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Schema) GetEnumDescriptions() []string {
	if m != nil {
		return m.EnumDescriptions
	}
	return nil
}

func (m *Schema) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *Schema) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Schema) GetProperties() *Schemas {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetAdditionalProperties() *Schema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

func (m *Schema) GetItems() *Schema {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Schema) GetXRef() string {
	if m != nil {
		return m.XRef
	}
	return ""
}

func (m *Schema) GetAnnotations() *Annotations {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type Schemas struct {
	AdditionalProperties []*NamedSchema `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Schemas) Reset()                    { *m = Schemas{} }
func (m *Schemas) String() string            { return proto.CompactTextString(m) }
func (*Schemas) ProtoMessage()               {}
func (*Schemas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Schemas) GetAdditionalProperties() []*NamedSchema {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Scope struct {
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
}

func (m *Scope) Reset()                    { *m = Scope{} }
func (m *Scope) String() string            { return proto.CompactTextString(m) }
func (*Scope) ProtoMessage()               {}
func (*Scope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Scope) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Scopes struct {
	AdditionalProperties []*NamedScope `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties" json:"additional_properties,omitempty"`
}

func (m *Scopes) Reset()                    { *m = Scopes{} }
func (m *Scopes) String() string            { return proto.CompactTextString(m) }
func (*Scopes) ProtoMessage()               {}
func (*Scopes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Scopes) GetAdditionalProperties() []*NamedScope {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

type Simple struct {
	Multipart bool   `protobuf:"varint,1,opt,name=multipart" json:"multipart,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *Simple) Reset()                    { *m = Simple{} }
func (m *Simple) String() string            { return proto.CompactTextString(m) }
func (*Simple) ProtoMessage()               {}
func (*Simple) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Simple) GetMultipart() bool {
	if m != nil {
		return m.Multipart
	}
	return false
}

func (m *Simple) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type StringArray struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *StringArray) Reset()                    { *m = StringArray{} }
func (m *StringArray) String() string            { return proto.CompactTextString(m) }
func (*StringArray) ProtoMessage()               {}
func (*StringArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *StringArray) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Annotations)(nil), "discovery.v1.Annotations")
	proto.RegisterType((*Any)(nil), "discovery.v1.Any")
	proto.RegisterType((*Auth)(nil), "discovery.v1.Auth")
	proto.RegisterType((*Document)(nil), "discovery.v1.Document")
	proto.RegisterType((*Icons)(nil), "discovery.v1.Icons")
	proto.RegisterType((*MediaUpload)(nil), "discovery.v1.MediaUpload")
	proto.RegisterType((*Method)(nil), "discovery.v1.Method")
	proto.RegisterType((*Methods)(nil), "discovery.v1.Methods")
	proto.RegisterType((*NamedMethod)(nil), "discovery.v1.NamedMethod")
	proto.RegisterType((*NamedParameter)(nil), "discovery.v1.NamedParameter")
	proto.RegisterType((*NamedResource)(nil), "discovery.v1.NamedResource")
	proto.RegisterType((*NamedSchema)(nil), "discovery.v1.NamedSchema")
	proto.RegisterType((*NamedScope)(nil), "discovery.v1.NamedScope")
	proto.RegisterType((*Parameter)(nil), "discovery.v1.Parameter")
	proto.RegisterType((*Parameters)(nil), "discovery.v1.Parameters")
	proto.RegisterType((*Protocols)(nil), "discovery.v1.Protocols")
	proto.RegisterType((*Request)(nil), "discovery.v1.Request")
	proto.RegisterType((*Resource)(nil), "discovery.v1.Resource")
	proto.RegisterType((*Resources)(nil), "discovery.v1.Resources")
	proto.RegisterType((*Response)(nil), "discovery.v1.Response")
	proto.RegisterType((*Resumable)(nil), "discovery.v1.Resumable")
	proto.RegisterType((*Schema)(nil), "discovery.v1.Schema")
	proto.RegisterType((*Schemas)(nil), "discovery.v1.Schemas")
	proto.RegisterType((*Scope)(nil), "discovery.v1.Scope")
	proto.RegisterType((*Scopes)(nil), "discovery.v1.Scopes")
	proto.RegisterType((*Simple)(nil), "discovery.v1.Simple")
	proto.RegisterType((*StringArray)(nil), "discovery.v1.StringArray")
}

func init() { proto.RegisterFile("Discovery/Discovery.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0xeb, 0x6e, 0xdc, 0xb6,
	0x12, 0xc6, 0xda, 0x7b, 0x9d, 0x5d, 0xdf, 0xe8, 0x4b, 0xe8, 0x5c, 0x70, 0x7c, 0x74, 0x70, 0xce,
	0xb1, 0x9b, 0xc4, 0x86, 0x9d, 0xa6, 0x28, 0x7a, 0xf9, 0xe1, 0xc0, 0xfd, 0x11, 0xb4, 0x4e, 0x1c,
	0x19, 0x69, 0x91, 0x1f, 0xc5, 0x82, 0x5e, 0xd1, 0x5e, 0x21, 0x92, 0xa8, 0x92, 0x94, 0x13, 0xf7,
	0x39, 0xfa, 0x04, 0xfd, 0xdb, 0x27, 0xe9, 0x63, 0x14, 0xe8, 0x83, 0x14, 0x1c, 0x52, 0x5a, 0xed,
	0x5a, 0xbb, 0x71, 0x9c, 0x5f, 0xe1, 0x5c, 0x2d, 0x0e, 0xbf, 0xf9, 0x66, 0xb2, 0xb0, 0x79, 0x14,
	0xaa, 0x81, 0xb8, 0xe4, 0xf2, 0x6a, 0xaf, 0x38, 0xed, 0xa6, 0x52, 0x68, 0x41, 0x7a, 0x41, 0xa1,
	0xb8, 0xdc, 0xbf, 0xbb, 0x79, 0x21, 0xc4, 0x45, 0xc4, 0xf7, 0xd0, 0x76, 0x96, 0x9d, 0xef, 0xb1,
	0xc4, 0x39, 0x7a, 0x3b, 0xd0, 0x3d, 0x4c, 0x12, 0xa1, 0x99, 0x0e, 0x45, 0xa2, 0xc8, 0x5d, 0x68,
	0x4b, 0xfe, 0x4b, 0x16, 0x4a, 0x1e, 0xd0, 0xda, 0xd6, 0xfc, 0x76, 0xc7, 0x2f, 0x64, 0xef, 0x3b,
	0x98, 0x3f, 0x4c, 0xae, 0xc8, 0x67, 0xd0, 0xb8, 0x64, 0x51, 0xc6, 0x69, 0x6d, 0xab, 0xb6, 0xdd,
	0x3d, 0x58, 0xdb, 0xb5, 0xc9, 0x77, 0xf3, 0xe4, 0xbb, 0x87, 0xc9, 0x95, 0x6f, 0x5d, 0x08, 0x81,
	0xfa, 0x15, 0x8b, 0x23, 0x3a, 0xb7, 0x55, 0xdb, 0xee, 0xf8, 0x78, 0xf6, 0xf6, 0xa1, 0x7e, 0x98,
	0xe9, 0x21, 0xd9, 0x81, 0xa6, 0x60, 0x99, 0x1e, 0x1e, 0xb8, 0x44, 0x2b, 0xbb, 0xe5, 0x6f, 0xc6,
	0x2c, 0xce, 0xc1, 0xfb, 0xad, 0x05, 0xed, 0x23, 0x31, 0xc8, 0x62, 0x9e, 0x68, 0x93, 0xf3, 0x6d,
	0x98, 0x04, 0x18, 0xd5, 0xf1, 0xf1, 0x4c, 0x1e, 0xc2, 0x4a, 0x11, 0xdc, 0xbf, 0xe4, 0x52, 0x85,
	0x22, 0x71, 0x7f, 0x74, 0xb9, 0x30, 0xfc, 0x68, 0xf5, 0x64, 0x11, 0xe6, 0xc2, 0x80, 0xce, 0xa3,
	0x75, 0x2e, 0x0c, 0x4c, 0xc2, 0x84, 0xc5, 0x9c, 0xd6, 0x6d, 0x42, 0x73, 0x26, 0x14, 0x5a, 0x79,
	0x9a, 0x06, 0xaa, 0x73, 0xd1, 0x56, 0xe8, 0x32, 0x44, 0x53, 0x13, 0x4d, 0x85, 0x4c, 0xd6, 0xa0,
	0xa1, 0x43, 0x1d, 0x71, 0xda, 0x42, 0x83, 0x15, 0xc8, 0x16, 0x74, 0x03, 0xae, 0x06, 0x32, 0x4c,
	0x4d, 0x8d, 0x69, 0x1b, 0x6d, 0x65, 0x15, 0xd9, 0x81, 0x46, 0x38, 0x10, 0x89, 0xa2, 0x1d, 0xac,
	0xc4, 0xea, 0x78, 0x25, 0x9e, 0x1b, 0x93, 0x6f, 0x3d, 0xc8, 0x63, 0x20, 0x81, 0xab, 0x04, 0x3e,
	0x59, 0x3f, 0x0a, 0x93, 0xb7, 0x14, 0x30, 0xe7, 0xca, 0x98, 0xe5, 0x87, 0x30, 0x79, 0x4b, 0x36,
	0xa0, 0x19, 0xb1, 0x33, 0x1e, 0x29, 0xda, 0xc5, 0xd7, 0x74, 0x92, 0xb9, 0x05, 0xbe, 0xd7, 0x40,
	0x44, 0xb4, 0x67, 0x6f, 0x91, 0xcb, 0x64, 0x13, 0xda, 0x67, 0x4c, 0xf1, 0x7e, 0x26, 0x23, 0xba,
	0x60, 0x2f, 0x6f, 0xe4, 0xd7, 0x32, 0x22, 0xf7, 0xa0, 0x83, 0xa6, 0x94, 0xe9, 0x21, 0x5d, 0xb4,
	0x71, 0x46, 0x71, 0xc2, 0xf4, 0xd0, 0xc4, 0x49, 0x21, 0x34, 0xc6, 0x2d, 0xd9, 0x38, 0x23, 0x9b,
	0xb8, 0x7f, 0x43, 0x4f, 0x71, 0x79, 0x19, 0x0e, 0x5c, 0xe8, 0xb2, 0xad, 0x81, 0xd3, 0x61, 0xf4,
	0x03, 0x80, 0x33, 0xa6, 0x07, 0x43, 0xeb, 0xb0, 0x82, 0x0e, 0x1d, 0xd4, 0xa0, 0xf9, 0x4b, 0x80,
	0x94, 0x49, 0x16, 0x73, 0xcd, 0xa5, 0xa2, 0x04, 0xeb, 0x44, 0xc7, 0xeb, 0x74, 0x52, 0xd8, 0xfd,
	0x92, 0x2f, 0xf9, 0x1f, 0xd4, 0x0d, 0x8a, 0xe8, 0x2a, 0xc6, 0x90, 0x09, 0x94, 0x65, 0x7a, 0xe8,
	0xa3, 0xdd, 0x94, 0xe4, 0x9c, 0x33, 0x9d, 0x49, 0xae, 0xe8, 0x9a, 0x85, 0x7e, 0x2e, 0x93, 0x3d,
	0x68, 0xa9, 0xc1, 0x90, 0xc7, 0x4c, 0xd1, 0x75, 0x4c, 0xb3, 0x3e, 0x9e, 0xe6, 0xd4, 0x1a, 0xfd,
	0xdc, 0xcb, 0x04, 0xc4, 0x5c, 0x0f, 0x45, 0xa0, 0xe8, 0x46, 0x55, 0xc0, 0xb1, 0x35, 0xfa, 0xb9,
	0x17, 0x79, 0x0a, 0x1d, 0xc9, 0x95, 0xc8, 0xe4, 0x80, 0x2b, 0x7a, 0x07, 0x43, 0xee, 0x8c, 0x87,
	0xf8, 0xb9, 0xd9, 0x1f, 0x79, 0x1a, 0xec, 0x72, 0xcd, 0x2e, 0x28, 0xb5, 0xd8, 0x35, 0x67, 0x53,
	0x6c, 0xf1, 0x2e, 0xe1, 0xb2, 0x1f, 0x88, 0x98, 0x85, 0x09, 0xdd, 0xb4, 0xc5, 0x46, 0xdd, 0x11,
	0xaa, 0x4c, 0xb1, 0xad, 0x0b, 0x02, 0xff, 0xae, 0x2d, 0x36, 0x6a, 0x5e, 0x18, 0xf4, 0xff, 0x17,
	0x16, 0x1d, 0xdc, 0xfb, 0xb1, 0x08, 0xb2, 0x88, 0xd3, 0x7b, 0xe8, 0xb2, 0xe0, 0xb4, 0xc7, 0xa8,
	0xf4, 0x1e, 0x42, 0x03, 0xb1, 0x49, 0x96, 0x61, 0xfe, 0xfd, 0xfe, 0x17, 0xae, 0x23, 0xcd, 0x11,
	0x35, 0x4f, 0x0e, 0x5c, 0x0b, 0x9a, 0xa3, 0xf7, 0x47, 0x0d, 0xba, 0xc7, 0x3c, 0x08, 0xd9, 0xeb,
	0x34, 0x12, 0x2c, 0x30, 0xc8, 0x64, 0x83, 0x01, 0x4f, 0xb5, 0xe3, 0x19, 0x27, 0x99, 0xce, 0x8b,
	0xd9, 0x7b, 0x15, 0xfe, 0xca, 0x5d, 0x74, 0x2e, 0x9a, 0x12, 0xe5, 0x18, 0x55, 0xd8, 0xbe, 0xd7,
	0x4a, 0x74, 0x92, 0x9b, 0xfd, 0x91, 0x27, 0x79, 0x02, 0xeb, 0x2a, 0x4b, 0x53, 0x21, 0xb5, 0xea,
	0xab, 0xec, 0x6c, 0xd4, 0x88, 0xa6, 0xdf, 0xdb, 0xfe, 0x5a, 0x6e, 0x3c, 0x2d, 0xd9, 0xbc, 0x3f,
	0xeb, 0xd0, 0xb4, 0x6f, 0xe4, 0xe8, 0xa2, 0x56, 0xa6, 0x0b, 0x84, 0xa8, 0xe3, 0x34, 0x73, 0x26,
	0xff, 0x82, 0xee, 0x50, 0xeb, 0xb4, 0x6f, 0x5f, 0xd3, 0x71, 0x0b, 0x18, 0x95, 0x4b, 0x32, 0xc1,
	0x01, 0xf5, 0xeb, 0x1c, 0x30, 0x0e, 0xf0, 0xc6, 0x47, 0x00, 0xfc, 0xff, 0xb0, 0x54, 0x48, 0x7d,
	0x21, 0x03, 0x2e, 0x69, 0x13, 0x4b, 0xba, 0x58, 0xa8, 0x5f, 0x1a, 0xad, 0x01, 0xa5, 0x21, 0x73,
	0xae, 0x34, 0x12, 0xd4, 0x35, 0x50, 0xfa, 0xd6, 0xe8, 0xe7, 0x5e, 0xe4, 0xc0, 0x70, 0x9d, 0x4a,
	0x45, 0xa2, 0x38, 0xd2, 0x56, 0xf7, 0x60, 0xe3, 0x1a, 0x26, 0xd1, 0xea, 0x17, 0x7e, 0xe6, 0x5d,
	0xd5, 0x40, 0xa4, 0xdc, 0x90, 0x19, 0xbe, 0xab, 0x95, 0xc8, 0xe7, 0xb0, 0x51, 0x3c, 0x43, 0x6c,
	0x70, 0xd0, 0x0f, 0xc4, 0xbb, 0x44, 0xb0, 0x00, 0xc9, 0xab, 0xf4, 0x0e, 0x08, 0x92, 0x23, 0x6b,
	0x23, 0x07, 0xa5, 0xc7, 0xb3, 0x51, 0x19, 0xc2, 0x87, 0x76, 0x31, 0x68, 0x75, 0x2c, 0xc8, 0x21,
	0xeb, 0x1b, 0xe8, 0x8d, 0xb9, 0xf6, 0xf0, 0xcb, 0x37, 0x27, 0x1b, 0xb0, 0x08, 0xf0, 0xbb, 0x71,
	0x29, 0x7a, 0x2a, 0x5c, 0x16, 0xa6, 0xc3, 0xc5, 0xf0, 0xe2, 0x79, 0xc4, 0xf4, 0x18, 0x2f, 0x1a,
	0x85, 0xa1, 0x2e, 0xef, 0x0d, 0xb4, 0x5c, 0xbb, 0x93, 0x17, 0xb0, 0xce, 0x82, 0x20, 0x34, 0x31,
	0x2c, 0xea, 0xa7, 0x52, 0xa4, 0x5c, 0xea, 0x90, 0x2b, 0xec, 0x81, 0x6b, 0xdf, 0x68, 0x7a, 0x31,
	0xb0, 0xa1, 0xfe, 0xda, 0x28, 0xee, 0xa4, 0x08, 0xf3, 0x8e, 0xa1, 0x5b, 0x72, 0x2a, 0x26, 0x59,
	0xad, 0x34, 0xc9, 0x8a, 0x71, 0x3d, 0xe7, 0xc6, 0x75, 0x05, 0x0f, 0xb9, 0x71, 0xed, 0x9d, 0xc2,
	0x22, 0xa6, 0x2b, 0x80, 0x56, 0x99, 0xf1, 0xf1, 0x78, 0xc6, 0x3b, 0x53, 0x40, 0x9a, 0x27, 0x7d,
	0x05, 0x0b, 0x98, 0x34, 0xe7, 0xaf, 0xca, 0x9c, 0x8f, 0xc6, 0x73, 0x6e, 0x54, 0x53, 0x5f, 0x9e,
	0x32, 0xbf, 0xb6, 0xa5, 0xdd, 0x5b, 0x5c, 0xdb, 0x06, 0xe6, 0xe9, 0xbe, 0x07, 0x70, 0xe9, 0x44,
	0x5a, 0xfd, 0x79, 0x3b, 0xe3, 0xd9, 0x56, 0x27, 0xb3, 0x89, 0xb4, 0xf8, 0xb6, 0xbf, 0xeb, 0xd0,
	0x19, 0xd5, 0xaf, 0x82, 0x3c, 0xf4, 0x55, 0x9a, 0x53, 0x1b, 0x9e, 0xc9, 0x0a, 0xd4, 0xfb, 0x92,
	0x9f, 0x3b, 0xd6, 0x98, 0xf7, 0xf9, 0xf9, 0x0d, 0xe8, 0x82, 0x42, 0x2b, 0xe0, 0xe7, 0x2c, 0x8b,
	0x74, 0xbe, 0xa0, 0x38, 0x71, 0x6c, 0x85, 0x6b, 0x22, 0x66, 0x0b, 0xd9, 0x34, 0xe7, 0xb9, 0x90,
	0x31, 0xd3, 0x6e, 0x43, 0x71, 0x92, 0xc9, 0x96, 0x32, 0xad, 0xb9, 0xcc, 0xd7, 0x93, 0x5c, 0x44,
	0x3a, 0x0e, 0x93, 0x30, 0xce, 0x62, 0x5c, 0x4e, 0x0c, 0x1d, 0x5b, 0xd1, 0x11, 0x35, 0x5a, 0xa0,
	0x20, 0x6a, 0xb4, 0x98, 0xa1, 0x94, 0x64, 0xb1, 0x5b, 0x39, 0xf0, 0x6c, 0x36, 0x34, 0xf3, 0x6f,
	0xbf, 0x74, 0x07, 0x45, 0x7b, 0xe8, 0xb0, 0x6c, 0x0c, 0x47, 0x25, 0xbd, 0xbd, 0x42, 0xca, 0x99,
	0xe6, 0x81, 0x6b, 0xbb, 0x42, 0x36, 0xb6, 0x48, 0x0c, 0x70, 0xc3, 0xc9, 0x3b, 0x2d, 0x97, 0xc9,
	0x53, 0x80, 0x52, 0x4f, 0x2d, 0xcd, 0x9a, 0xd4, 0x25, 0x47, 0xf2, 0x7c, 0x5a, 0x57, 0x2e, 0xcf,
	0xc0, 0x4e, 0x65, 0x43, 0x1a, 0xd8, 0x85, 0x9a, 0xc7, 0x0a, 0x17, 0x98, 0xa9, 0xb0, 0x43, 0x17,
	0xf2, 0x35, 0x74, 0xd9, 0x68, 0xf5, 0x76, 0x3b, 0xcd, 0xe6, 0xe4, 0x16, 0x5c, 0x38, 0xf8, 0x65,
	0x6f, 0xaf, 0x0f, 0x30, 0x1a, 0x07, 0xe4, 0xd5, 0x6c, 0x5e, 0xb9, 0x5f, 0xc1, 0x2b, 0xa3, 0x3e,
	0xad, 0xa6, 0x96, 0x14, 0x3a, 0xc5, 0x38, 0x25, 0x8f, 0xa0, 0xa9, 0xc2, 0x38, 0x8d, 0x46, 0x4b,
	0xff, 0xf8, 0xbd, 0xd0, 0xe6, 0x3b, 0x1f, 0xb7, 0xcb, 0x64, 0x31, 0x3b, 0x8b, 0xa6, 0x90, 0x84,
	0x9f, 0x9b, 0xfd, 0x91, 0xa7, 0x77, 0x1f, 0x5a, 0x6e, 0x02, 0x15, 0x2d, 0x51, 0x2b, 0x5a, 0xc2,
	0x93, 0xd0, 0x2e, 0x18, 0xa4, 0xb4, 0x5d, 0xd5, 0x3e, 0x7e, 0xbb, 0x9a, 0xbb, 0xe9, 0x76, 0xe5,
	0xfd, 0x0c, 0x9d, 0x42, 0x4f, 0x4e, 0x66, 0xd7, 0xf8, 0x5e, 0x45, 0x8d, 0x0b, 0xde, 0xaa, 0x2e,
	0xf1, 0x03, 0xbc, 0x92, 0x1d, 0x9b, 0x15, 0x37, 0xfe, 0x16, 0xff, 0xba, 0x2d, 0x0e, 0xb9, 0x0f,
	0x9d, 0x38, 0x8b, 0x74, 0x98, 0x32, 0xa9, 0xd1, 0xa9, 0xed, 0x8f, 0x14, 0x55, 0x3b, 0x89, 0xf7,
	0x57, 0x1d, 0x9a, 0x8e, 0x20, 0x6f, 0xc2, 0x42, 0x13, 0x94, 0x33, 0x3f, 0x93, 0x72, 0xea, 0xd3,
	0x29, 0xa7, 0x31, 0x95, 0x72, 0x9a, 0xd3, 0x28, 0xa7, 0x35, 0x95, 0x72, 0xda, 0x53, 0x29, 0xa7,
	0x53, 0x4d, 0x39, 0xf0, 0x21, 0xca, 0xe9, 0xde, 0x80, 0x72, 0x7a, 0x33, 0x28, 0x67, 0x61, 0x26,
	0xe5, 0x2c, 0x7e, 0x32, 0xe5, 0x2c, 0xdd, 0x9e, 0x72, 0x96, 0x3f, 0x4c, 0x39, 0x39, 0xca, 0x56,
	0x46, 0xa3, 0xe6, 0x93, 0x58, 0xe8, 0x0d, 0xb4, 0xdc, 0xed, 0x6e, 0xb3, 0xda, 0xcc, 0xba, 0x96,
	0xb7, 0x03, 0x0d, 0x3b, 0x8f, 0x27, 0x80, 0x59, 0xbb, 0x06, 0x4c, 0xef, 0x27, 0x03, 0x74, 0x5c,
	0x32, 0x8f, 0x67, 0x7f, 0x04, 0xad, 0xfc, 0x08, 0x33, 0xbc, 0xab, 0xbf, 0xe1, 0x2b, 0x68, 0x5a,
	0x6a, 0xbb, 0x45, 0xfb, 0xfd, 0x07, 0xba, 0xa7, 0x5a, 0x86, 0xc9, 0xc5, 0xa1, 0x94, 0xec, 0x8a,
	0xac, 0x8d, 0x7e, 0x35, 0x31, 0x00, 0xb4, 0xc2, 0xb3, 0x6d, 0x58, 0x16, 0xf2, 0x62, 0xb7, 0xf4,
	0xdb, 0xc5, 0xfe, 0xb3, 0xde, 0xcb, 0x94, 0x27, 0x87, 0x27, 0xcf, 0x91, 0x7d, 0x4f, 0x6a, 0xbf,
	0xcf, 0xcd, 0xbf, 0x3c, 0x3c, 0x3d, 0x6b, 0xe2, 0x7f, 0x68, 0x9e, 0xfc, 0x13, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0xd7, 0xb3, 0x38, 0xf4, 0x11, 0x00, 0x00,
}
