// Copyright 2020 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package tests.oneof.message.v1;

import "google/api/annotations.proto";
import "openapiv3/annotations.proto";

option go_package = "github.com/google/gnostic/apps/protoc-gen-openapi/examples/tests/oneof/message/v1;message";

service Messaging {
    rpc SendMessage(Message) returns(Message) {
        option(google.api.http) = {
            post: "/v1/messages/{message_id}"
            body: "*"
        };
    }
}

message Message {
    string message_id = 1;
    string text = 2;

    oneof sender {
      // Email address of the sender
      string email = 3 [
        (openapi.v3.property) = {
          type: 'string',
          format: 'email'
        }
      ];

      // Full name of the sender
      string name = 4;
    }

    Double double = 5;
}

// Double demonstrates the generated output for a message with more than one `oneof`
// group
message Double {
  oneof foo {
    bool bar = 1;
  }

  oneof baz {
    bool qux = 2;
  }
}
